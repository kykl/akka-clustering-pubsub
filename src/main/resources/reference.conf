akka {
  loggers = [akka.event.slf4j.Slf4jLogger]
  loglevel = debug
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = off
      lifecycle = off
    }
  }
  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = ""
      port = ${clustering.port}
    }
  }
  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]
    auto-down-unreachable-after = 10s
  }

  contrib.cluster.pub-sub {
    # Actor name of the mediator actor, /user/distributedPubSubMediator
    name = distributedPubSubMediator

    # Start the mediator on members tagged with this role.
    # All members are used if undefined or empty.
    role = ""

    # How often the DistributedPubSubMediator should send out gossip information
    gossip-interval = 1s

    # Removed entries are pruned after this duration
    removed-time-to-live = 120s
  }
}

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 1600
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
  seed-port = 1600
  seed-port = ${?SEED_PORT_1600_TCP_PORT}
  cluster.name = clustering-magic
}
